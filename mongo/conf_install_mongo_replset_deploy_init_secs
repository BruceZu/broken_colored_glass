#!/bin/bash

main() {
  # $@ is not array
  local input=("$@")
  local hop=${input[-2]}
  local nodes=("${input[@]:0:$#-2}")
  #${!#}
  local replset_name="${@: -1}"
  local pop="Nodes: ${nodes[@]}\nsshhop: ${hop}\nReplset name: $replset_name"
  confirm_or_exit "$pop"

  local hu=ubuntu
  local nu=ec2-user

  f="conf_install_mongod.sh"
  for node in ${nodes[@]}; do
    scp -o ProxyCommand="ssh -W %h:%p ${hu}@${hop}" ./$f ${nu}@${node}:/tmp/
    ssh ${hu}@$hop ssh ${nu}@$node "bash /tmp/$f $replset_name"
  done

  # Select one as primary

  local pri=${nodes[0]}
  local secs=${nodes[@]:1}

  # replset initiate
  local pop="Sure the replset is not initialized"
  confirm_or_exit "$pop"
  echo "mongo --eval \"rs.initiate()\"" | ssh -t ${hu}@$hop ssh ${nu}@$pri
  # Current config
  show_replset_config @{hu} ${hop} ${nu} ${pri}
  pop="Sure only one member in replset"
  confirm_or_exit "$pop"
  # Set higher priority to make it as a permanent primary
  echo "mongo --eval \"
 conf=rs.config();
 conf.members[0].priority = 10;
 rs.reconfig(conf)
  \"" | ssh -t ${hu}@$hop ssh ${nu}@$pri

  # Current config
  show_replset_config @{hu} ${hop} ${nu} ${pri}
  pop="Check only one member in replsetm. These nodes are not in it: ${secs[@]}"
  confirm_or_exit "$pop"
  # Add nodes
  for sec in ${secs[@]}; do
    local host=$(@{hu}@$hop ssh ${nu}@$sec hostname)
    echo "mongo --eval \"rs.status().members.forEach(function(m){
    printjson(m.name + ' : ' + m.stateStr)
});   \"" | ssh -t ${hu}@$hop ssh ${nu}@$pri | grep $host
    if [[ $? == 0 ]]; then
      echo "The current node $host has been in the replset" >&2
    else
      echo "mongo --eval \"rs.add('$host')\"" | ssh -t ${hu}@$hop ssh ${nu}@$pri
    fi
  done

  # Check status
  show_replset_status @{hu} ${hop} ${nu} ${pri}
  # Check config
  show_replset_config @{hu} ${hop} ${nu} ${pri}
  # DB, collections, documents number.
  replset_info_db_coll_docu_number ${nodes[@]} ${hu} $hop ${nu}
}

if [[ -z "$@" ]]; then
  echo -e "Call this bash file like\n ./$0 node1 node2 node2 node4 ... noden sshopIP replset-name"
  exit 1
fi
. ./common.sh
main "$@"
